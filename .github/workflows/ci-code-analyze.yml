name: CleanUp, Inspect, Analyze, UnitTest

on: [ push ]

jobs:
    r-sharp-cleanup:
        name: R# Cleanup Code
        runs-on: ubuntu-latest

        steps:
          -   name: Checkout
              uses: actions/checkout@v3

          -   name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 6.0.x

          -   name: Restore Dependencies
              run: dotnet restore Blef.sln

          -   name: Cleanup Code
              id: cleanup
              uses: ArturWincenciak/ReSharper_CleanupCode@v2.0
              with:
                  solution: 'Blef.sln'
                  fail_on_reformat_needed: 'no'
                  auto_commit: 'yes'
                  jb_cleanup_code_arg: '--verbosity=INFO --profile=Blef: Full Cleanup --exclude=**UnitTests/**.*'
                  commit_message: 'Cleanup code by ReSharper CLI CleanupCode GitHub Action'
                  commit_creator_email: 'cleanupcode@github.action'
                  commit_creator_name: 'CleanupCode Action'

    unit-tests:
        name: Unit Tests
        runs-on: ubuntu-latest
        needs: r-sharp-cleanup

        steps:
          - name: Checkout
            uses: actions/checkout@v3

          - name: Setup .NET
            uses: actions/setup-dotnet@v3
            with:
              dotnet-version: 6.0.x

          - name: Restore Dependencies
            run: dotnet restore Blef.sln

          - name: Build
            run: dotnet build Blef.sln --configuration Release --no-restore

          - name: Test
            run: dotnet test Blef.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    r-sharp-inspection:
        name:  R# Inspect Code
        runs-on: ubuntu-latest
        needs: r-sharp-cleanup

        steps:
          - name: Checkout
            uses: actions/checkout@v3
            with:
              fetch-depth: 0

          - name: Setup .NET
            uses: actions/setup-dotnet@v3
            with:
              dotnet-version: 6.0.x

          - name: Restore Dependencies
            run: dotnet restore Blef.sln

          - name: Inspect code
            uses: muno92/resharper_inspectcode@1.6.7
            with:
              solutionPath: ./Blef.sln
              failOnIssue: 1
              minimumSeverity: notice
              solutionWideAnalysis: true

    sonar-cloud:
      name: Sonar Cloud Analyze
      runs-on: windows-latest
      needs: r-sharp-cleanup

      steps:
          - name: Set up JDK 11
            uses: actions/setup-java@v1
            with:
              java-version: 1.11

          - name: Checkout
            uses: actions/checkout@v3
            with:
              fetch-depth: 0

          - name: Cache SonarCloud packages
            uses: actions/cache@v1
            with:
              path: ~\sonar\cache
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar

          - name: Cache SonarCloud scanner
            id: cache-sonar-scanner
            uses: actions/cache@v1
            with:
              path: .\.sonar\scanner
              key: ${{ runner.os }}-sonar-scanner
              restore-keys: ${{ runner.os }}-sonar-scanner

          - name: Install SonarCloud scanner
            if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
            shell: powershell
            run: |
              New-Item -Path .\.sonar\scanner -ItemType Directory
              dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

          - name: Build and analyze
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            shell: powershell
            run: |
              .\.sonar\scanner\dotnet-sonarscanner begin /k:"ArturWincenciak_Blef" /o:"arturwincenciak" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
              dotnet build Blef.sln
              .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"