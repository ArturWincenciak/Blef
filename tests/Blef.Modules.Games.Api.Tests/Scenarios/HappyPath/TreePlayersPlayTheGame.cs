using Blef.Modules.Games.Api.Tests.Core;
using Blef.Modules.Games.Api.Tests.Scenarios.ValueObjects;

namespace Blef.Modules.Games.Api.Tests.Scenarios.HappyPath;

public class TreePlayersPlayTheGame
{
    [Fact]
    public async Task Scenario()
    {
        var results = await new TestBuilder()
            .NewGame()
            .GetGameFlow()
            .JoinPlayer(WhichPlayer.Knuth)
            .JoinPlayer(WhichPlayer.Graham)
            .JoinPlayer(WhichPlayer.Conway)
            .NewDeal()
            .GetGameFlow()
            .GetDealFlow(new(1))
            .GetCards(WhichPlayer.Knuth, deal: new(1), description: "Knuth has one card")
            .GetCards(WhichPlayer.Graham, deal: new(1), description: "Graham has one card")
            .GetCards(WhichPlayer.Conway, deal: new(1), description: "Conway has one card")
            .BidHighCard(WhichPlayer.Knuth, FaceCard.Nine, description: "Knuth starts the deal")
            .BidHighCard(WhichPlayer.Graham, FaceCard.Ten)
            .BidHighCard(WhichPlayer.Conway, FaceCard.Jack)
            .Check(WhichPlayer.Knuth, description: "Knuth checks, Conway get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(1))
            .GetCards(WhichPlayer.Knuth, deal: new(2), description: "Knuth has one card")
            .GetCards(WhichPlayer.Graham, deal: new(2), description: "Graham has one card")
            .GetCards(WhichPlayer.Conway, deal: new(2), description: "Conway has two cards")
            .BidPair(WhichPlayer.Knuth, FaceCard.Ace, description: "Knuth starts the deal")
            .Check(WhichPlayer.Graham, description: "Graham checks and get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(2))
            .GetCards(WhichPlayer.Knuth, deal: new(3), description: "Knuth has one card")
            .GetCards(WhichPlayer.Graham, deal: new(3), description: "Graham has two cards")
            .GetCards(WhichPlayer.Conway, deal: new(3), description: "Conway has two cards")
            .BidPair(WhichPlayer.Conway, FaceCard.King, description: "Conway starts the deal")
            .BidThreeOfAKind(WhichPlayer.Knuth, FaceCard.Ace)
            .Check(WhichPlayer.Graham, description: "Graham checks, Knuth get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(3))
            .GetCards(WhichPlayer.Knuth, deal: new(4), description: "Knuth has two cards")
            .GetCards(WhichPlayer.Graham, deal: new(4), description: "Graham has two cards")
            .GetCards(WhichPlayer.Conway, deal: new(4), description: "Conway has two cards")
            .BidFourOfAKind(WhichPlayer.Graham, FaceCard.Nine, description: "Graham starts the deal")
            .BidStraightFlush(WhichPlayer.Conway, Suit.Clubs)
            .Check(WhichPlayer.Knuth, description: "Knuth checks, Conway get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(4))
            .GetCards(WhichPlayer.Knuth, deal: new(5), description: "Knuth has two cards")
            .GetCards(WhichPlayer.Graham, deal: new(5), description: "Graham has two cards")
            .GetCards(WhichPlayer.Conway, deal: new(5), description: "Conway has three cards")
            .BidHighCard(WhichPlayer.Knuth, FaceCard.Queen, description: "Knuth starts the deal")
            .BidHighCard(WhichPlayer.Graham, FaceCard.King)
            .BidPair(WhichPlayer.Conway, FaceCard.Queen)
            .BidPair(WhichPlayer.Knuth, FaceCard.King)
            .BidFullHouse(WhichPlayer.Graham, FaceCard.Ace, FaceCard.King)
            .Check(WhichPlayer.Conway, description: "Conway checks, Graham get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(5))
            .GetCards(WhichPlayer.Knuth, deal: new(6), description: "Knuth has two cards")
            .GetCards(WhichPlayer.Graham, deal: new(6), description: "Graham has three cards")
            .GetCards(WhichPlayer.Conway, deal: new(6), description: "Conway has three cards")
            .BidHighCard(WhichPlayer.Conway, FaceCard.Nine)
            .BidHighCard(WhichPlayer.Knuth, FaceCard.Ten)
            .BidHighCard(WhichPlayer.Graham, FaceCard.Jack)
            .BidPair(WhichPlayer.Conway, FaceCard.Nine)
            .BidPair(WhichPlayer.Knuth, FaceCard.Ten)
            .BidPair(WhichPlayer.Graham, FaceCard.Jack)
            .BidThreeOfAKind(WhichPlayer.Conway, FaceCard.Queen)
            .BidThreeOfAKind(WhichPlayer.Knuth, FaceCard.King)
            .BidThreeOfAKind(WhichPlayer.Graham, FaceCard.Ace)
            .BidStraightFlush(WhichPlayer.Conway, Suit.Clubs)
            .BidStraightFlush(WhichPlayer.Knuth, Suit.Diamonds)
            .BidStraightFlush(WhichPlayer.Graham, Suit.Hearts)
            .BidRoyalFlush(WhichPlayer.Conway, Suit.Clubs)
            .BidRoyalFlush(WhichPlayer.Knuth, Suit.Diamonds)
            .BidRoyalFlush(WhichPlayer.Graham, Suit.Hearts)
            .Check(WhichPlayer.Conway, description: "Conway checks, Graham get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(6))
            .GetCards(WhichPlayer.Knuth, deal: new(7), description: "Knuth has two cards")
            .GetCards(WhichPlayer.Graham, deal: new(7), description: "Graham has four cards")
            .GetCards(WhichPlayer.Conway, deal: new(7), description: "Conway has three cards")
            .BidHighCard(WhichPlayer.Conway, FaceCard.Jack, description: "Conway starts the deal")
            .BidHighCard(WhichPlayer.Knuth, FaceCard.Queen)
            .BidHighCard(WhichPlayer.Graham, FaceCard.King)
            .BidHighCard(WhichPlayer.Conway, FaceCard.Ace)
            .BidPair(WhichPlayer.Knuth, FaceCard.Ace)
            .BidLowStraight(WhichPlayer.Graham)
            .BidHighStraight(WhichPlayer.Conway)
            .BidFullHouse(WhichPlayer.Knuth, FaceCard.King, FaceCard.Ace)
            .BidFullHouse(WhichPlayer.Graham, FaceCard.Ace, FaceCard.King)
            .BidFourOfAKind(WhichPlayer.Conway, FaceCard.King)
            .BidFourOfAKind(WhichPlayer.Knuth, FaceCard.Ace)
            .Check(WhichPlayer.Graham, description: "Graham checks, Knuth get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(7))
            .GetCards(WhichPlayer.Knuth, deal: new(8), description: "Knuth has three cards")
            .GetCards(WhichPlayer.Graham, deal: new(8), description: "Graham has four cards")
            .GetCards(WhichPlayer.Conway, deal: new(8), description: "Conway has three cards")
            .BidFullHouse(WhichPlayer.Graham, FaceCard.Ace, FaceCard.King, description: "Graham starts the deal")
            .Check(WhichPlayer.Conway, description: "Conway checks and get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(8))
            .GetCards(WhichPlayer.Knuth, deal: new(8), description: "Knuth has three cards")
            .GetCards(WhichPlayer.Graham, deal: new(8), description: "Graham has four cards")
            .GetCards(WhichPlayer.Conway, deal: new(8), description: "Conway has four cards")
            .BidTwoPairs(WhichPlayer.Knuth, FaceCard.Ace, FaceCard.King, description: "Knuth starts the deal")
            .BidLowStraight(WhichPlayer.Graham)
            .BidHighStraight(WhichPlayer.Conway)
            .Check(WhichPlayer.Knuth, description: "Knuth checks and get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(9))
            .GetCards(WhichPlayer.Knuth, deal: new(10), description: "Knuth has four cards")
            .GetCards(WhichPlayer.Graham, deal: new(10), description: "Graham has four cards")
            .GetCards(WhichPlayer.Conway, deal: new(10), description: "Conway has four cards")
            .BidHighStraight(WhichPlayer.Graham, description: "Graham starts the deal")
            .BidFullHouse(WhichPlayer.Conway, FaceCard.Ace, FaceCard.King)
            .Check(WhichPlayer.Knuth, description: "Knuth checks and get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(10))
            .GetCards(WhichPlayer.Knuth, deal: new(11), description: "Knuth has five cards")
            .GetCards(WhichPlayer.Graham, deal: new(11), description: "Graham has four cards")
            .GetCards(WhichPlayer.Conway, deal: new(11), description: "Conway has four cards")
            .BidFourOfAKind(WhichPlayer.Graham, FaceCard.King, description: "Graham starts the deal")
            .Check(WhichPlayer.Conway, description: "Conway checks, Graham get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(11))
            .GetCards(WhichPlayer.Knuth, deal: new(12), description: "Knuth has five cards")
            .GetCards(WhichPlayer.Graham, deal: new(12), description: "Graham has five cards")
            .GetCards(WhichPlayer.Conway, deal: new(12), description: "Conway has four cards")
            .BidLowStraight(WhichPlayer.Conway, description: "Conway starts the deal")
            .BidHighStraight(WhichPlayer.Knuth)
            .Check(WhichPlayer.Graham, description: "Graham checks and get lost the GAME!")
            .GetGameFlow()
            .GetDealFlow(deal: new(12))
            .GetCards(WhichPlayer.Knuth, deal: new(13), description: "Knuth has five cards")
            .GetCards(WhichPlayer.Graham, deal: new(13), description: "Graham lost the game")
            .GetCards(WhichPlayer.Conway, deal: new(13), description: "Conway has four cards")
            .BidFourOfAKind(WhichPlayer.Conway, FaceCard.King, description: "Conway starts the deal")
            .Check(WhichPlayer.Knuth, description: "Knuth checks, Conway get lost the deal")
            .GetGameFlow()
            .GetDealFlow(deal: new(13))
            .GetCards(WhichPlayer.Knuth, deal: new(14), description: "Knuth has five cards")
            .GetCards(WhichPlayer.Conway, deal: new(14), description: "Conway has five cards")
            .BidPair(WhichPlayer.Knuth, FaceCard.King, description: "Knuth starts the deal")
            .BidFourOfAKind(WhichPlayer.Conway, FaceCard.King)
            .Check(WhichPlayer.Knuth, description: "Knuth checks, Conway get lost the deal")
            .GetGameFlow(description: "The winner is Knuth!")
            .GetDealFlow(deal: new(14))
            .Build();

        await Verify(results);
    }
}